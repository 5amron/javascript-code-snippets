
app.use(passport.initialize());
app.use(passport.session());

passport.use(new passportLocal.Strategy(function(username,password,done){
  // done(null,user);
  // done(null,null);
  // done(new Error('ouch!'));
  // if (username === "admin" && password === "admin" ) {
      
  //     return done({id:username, username: username});     //this is ???user??? object
  //   }
    
  //   return done(false);

  done(null,user);
  done(null,null);
  done(new Error('ouch!'));
  if (username === "admin" && password === "admin" ) {
      
      return done({id:username, username: username});     //this is ???user??? object
    }
    
    return done(false);


  // my_schema.findOne({
  //       'username': username, 
  //     }, function(err, user,res) {
  //         if (err) {
            
  //           return done(err);
  //         }

  //         if (!user) {
  //           console.log('wrong username!');               /////////////this worked
  //           return done(null, false);
  //         }

  //         if (user.pass_1 != password) {
  //           console.log('wrong password');
  //           return done(null, false);
  //         }

  //         return done(null, user);
  //     });



}));

//Serialize function determine what data from the user object should be stored in the session. 
//The result of the serializeUser method is attached to the session as req.session.passport.user = {} 
//here for instance it would be(as we provide id as key) req.session.passport.user = {id:'xyz'}
passport.serializeUser(function(user, done) {
  done(null,user);       
});


//So your whole object is retrieved with help of that key.
//That key here is id(key can be any key of the user object ie name,email etc)
//In deserialize function that key is matched with in memory array / database or any data resource
passport.deserializeUser(function(user, done) {
  //query database or cashe here
  done(null,user);                     
                 //|______________>user object attaches to the request as req.user                                        

});

